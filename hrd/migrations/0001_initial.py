# Generated by Django 4.2.16 on 2024-10-18 03:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('home_address', models.TextField()),
                ('living_situation', models.CharField(choices=[('Own house', 'Own house'), ('Rented house', 'Rented house'), ('With parents', 'With parents'), ('Others', 'Others')], max_length=20)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('residence_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('office_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('mobile_phone', models.CharField(max_length=20)),
                ('computer_proficient', models.BooleanField()),
                ('computer_type', models.CharField(blank=True, max_length=255, null=True)),
                ('programs_languages', models.TextField(blank=True, null=True)),
                ('interested_in_other_positions', models.BooleanField()),
                ('current_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_expected', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('current_remuneration_details', models.TextField(blank=True, null=True)),
                ('availability_date', models.DateField(blank=True, null=True)),
                ('notice_period', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_birth', models.DateField()),
                ('age', models.PositiveIntegerField()),
                ('place_of_birth', models.CharField(max_length=255)),
                ('marital_status', models.CharField(choices=[('Single', 'Belum Menikah (Single)'), ('Married', 'Menikah (Married)'), ('Divorced', 'Cerai (Divorced)'), ('Widowed', 'Janda/Duda (Widowed)')], max_length=50)),
                ('nationality', models.CharField(choices=[('ID', 'Warga Negara Indonesia (Indonesian)'), ('FR', 'Warga Negara Asing (Foreigner)')], max_length=100)),
                ('race', models.CharField(choices=[('Jawa', 'Jawa'), ('Sunda', 'Sunda'), ('Betawi', 'Betawi'), ('Batak', 'Batak'), ('Tionghoa', 'Tionghoa'), ('Other', 'Lainnya (Other)')], max_length=100)),
                ('religion', models.CharField(choices=[('Islam', 'Islam'), ('Catholic', 'Katolik (Catholic)'), ('Christian', 'Kristen (Christian)'), ('Hindu', 'Hindu'), ('Buddha', 'Buddha'), ('Confucianism', 'Konghucu (Confucianism)'), ('Other', 'Lainnya (Other)')], max_length=100)),
                ('driving_license', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('SIM_A', 'SIM A (Private Passenger Vehicle)'), ('SIM_B1', 'SIM B I (Truck)'), ('SIM_B2', 'SIM B II (Large Truck or Trailer)'), ('SIM_C', 'SIM C (Motorcycle)'), ('SIM_D', 'SIM D (Disability Vehicle)')], max_length=50, null=True)),
                ('owns_car', models.BooleanField()),
                ('good_health', models.BooleanField()),
                ('health_issue_details', models.TextField(blank=True, help_text='If not in good health, specify reasons.', null=True)),
                ('serious_illness_history', models.TextField(blank=True, help_text='Provide details of serious illness, allergies, operations, disabilities, or accidents with dates.', null=True)),
                ('refused_insurance_coverage', models.BooleanField()),
                ('alcohol_or_drugs', models.BooleanField()),
                ('alcohol_drugs_extent', models.TextField(blank=True, help_text='Specify the extent of alcohol/drug consumption.', null=True)),
                ('convicted_in_court', models.BooleanField()),
                ('court_conviction_details', models.TextField(blank=True, help_text='If convicted, provide details.', null=True)),
                ('administrative_civil_criminal_case', models.TextField(blank=True, help_text='Provide details if involved in any cases.', null=True)),
                ('in_debt', models.BooleanField()),
                ('debt_details', models.TextField(blank=True, help_text='If in debt, provide details including to whom, the extent, and reason.', null=True)),
                ('dismissed_or_suspended', models.BooleanField()),
                ('dismissal_details', models.TextField(blank=True, help_text='If dismissed or suspended, provide details.', null=True)),
                ('engaged_in_business', models.BooleanField()),
                ('business_type', models.CharField(blank=True, choices=[('Retail', 'Perdagangan (Retail)'), ('Manufacturing', 'Manufaktur (Manufacturing)'), ('Agriculture', 'Pertanian (Agriculture)'), ('Construction', 'Konstruksi (Construction)'), ('Finance', 'Keuangan (Finance)'), ('Healthcare', 'Kesehatan (Healthcare)'), ('Education', 'Pendidikan (Education)'), ('Hospitality', 'Perhotelan (Hospitality)'), ('Transportation', 'Transportasi (Transportation)'), ('IT/Tech', 'Teknologi Informasi (IT/Tech)'), ('Other', 'Lainnya (Other)')], help_text='If engaged in business, specify the type.', max_length=255, null=True)),
                ('other_sources_of_income', models.BooleanField()),
                ('income_sources_details', models.TextField(blank=True, help_text='If other sources of income, provide details.', null=True)),
                ('spoken_languages', models.CharField(choices=[('IN', 'Indonesian'), ('EN', 'English'), ('CH', 'Chinese'), ('OT', 'Other')], default='IN', max_length=3)),
                ('written_languages', models.CharField(choices=[('IN', 'Indonesian'), ('EN', 'English'), ('CH', 'Chinese'), ('OT', 'Other')], default='IN', max_length=3)),
                ('additional_language', models.CharField(blank=True, help_text='Specify if any other language spoken/written.', max_length=255, null=True)),
                ('hobbies_and_interests', models.TextField(blank=True, help_text='List hobbies, games, or other interests.', null=True)),
                ('additional_information', models.TextField(blank=True, help_text='Any additional information for the employer, including why you are suitable for the position.', null=True)),
                ('agreement', models.BooleanField(default=False, help_text='I HEREBY CONFIRM ALL THE ABOVE DETAILS TO BE TRUE AND CORRECT.<br>I AUTHORISE {{ COMPANY }}TO CARRY OUT. REFERENCE CHECK WITH PAST EMPLOYER AND REFEREES IN CONNECTION WITH THIS APPLICATION.<br>I UNDERSTAND THAT ANY MISPRESENTATION OR MISSION OF INFORMATION WILL BE SUFFICIENT REASONS FOR WITHDRAWL OF AN OFFER OR SUBSEQUENT DISMISSAL, IF EMPLOYED', verbose_name='Agree')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Job title, e.g., Software Engineer, Project Manager', max_length=255)),
                ('description', models.TextField(help_text='Detailed job description, responsibilities, and duties')),
                ('employment_type', models.CharField(choices=[('FT', 'Full Time'), ('PT', 'Part Time'), ('CT', 'Contract'), ('TP', 'Temporary'), ('IN', 'Internship')], default='FT', help_text='Type of employment', max_length=2)),
                ('qualifications', models.TextField(blank=True, help_text='Required qualifications, degrees, or certifications')),
                ('experience_required', models.PositiveIntegerField(default=0, help_text='Minimum years of experience required')),
                ('skills_required', models.TextField(blank=True, help_text='Required skills for this position')),
                ('min_salary', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum salary offered', max_digits=10, null=True)),
                ('max_salary', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum salary offered', max_digits=10, null=True)),
                ('currency', models.CharField(default='USD', help_text='Currency of the salary, e.g., USD, EUR, IDR', max_length=3)),
                ('benefits', models.TextField(blank=True, help_text='Additional benefits such as health insurance, paid leave, etc.')),
                ('date_posted', models.DateField(auto_now_add=True, help_text='Date when the job was posted')),
                ('application_deadline', models.DateField(blank=True, help_text='Application deadline', null=True)),
                ('contact_email', models.EmailField(help_text='Contact email for job applications', max_length=254)),
                ('contact_phone', models.CharField(blank=True, help_text='Contact phone number for job applications', max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is this job posting currently active?')),
            ],
            options={
                'verbose_name': 'Job Vacancy',
                'verbose_name_plural': 'Job Vacancies',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(help_text='Name of the company with a pending application', max_length=255)),
                ('date_of_application', models.DateField(help_text='Date of application for the company')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='hrd.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_year', models.PositiveIntegerField()),
                ('to_year', models.PositiveIntegerField(blank=True, null=True)),
                ('organization_name', models.CharField(max_length=255)),
                ('position_held', models.CharField(blank=True, max_length=255, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organizations', to='hrd.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(choices=[('Father', 'Father'), ('Mother', 'Mother'), ('Brother', 'Brother'), ('Sister', 'Sister'), ('Spouse', 'Spouse'), ('Child', 'Child')], max_length=10)),
                ('name', models.CharField(max_length=255)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('employer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_members', to='hrd.applicant')),
            ],
            options={
                'verbose_name': 'Family',
                'verbose_name_plural': 'Families',
            },
        ),
        migrations.CreateModel(
            name='EmploymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_employment', models.DateField()),
                ('date_employment_ended', models.DateField(blank=True, null=True)),
                ('company_name', models.CharField(max_length=255)),
                ('company_address', models.TextField()),
                ('nature_of_business', models.CharField(max_length=255)),
                ('position_held', models.CharField(max_length=255)),
                ('supervisor_name', models.CharField(max_length=255)),
                ('supervisor_designation', models.CharField(max_length=255)),
                ('total_employees_in_company', models.PositiveIntegerField(blank=True, null=True)),
                ('number_of_staff_supervised', models.PositiveIntegerField(blank=True, null=True)),
                ('description_of_duties', models.TextField()),
                ('employed_through', models.CharField(help_text='How did you get employed? (e.g., Advertisement, Recommendation)', max_length=255)),
                ('reason_for_leaving', models.CharField(blank=True, max_length=255, null=True)),
                ('last_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employment_histories', to='hrd.applicant')),
            ],
            options={
                'verbose_name': 'Employement History',
                'verbose_name_plural': 'Employment History',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_year', models.PositiveIntegerField()),
                ('to_year', models.PositiveIntegerField(blank=True, null=True)),
                ('school_name', models.CharField(max_length=255)),
                ('state_level_attained', models.CharField(choices=[('SD', 'Sekolah Dasar (SD)'), ('SMP', 'Sekolah Menengah Pertama (SMP)'), ('SMA', 'Sekolah Menengah Atas (SMA)'), ('DIP', 'Diploma'), ('S1', 'Sarjana (S1)'), ('S2', 'Magister (S2)'), ('S3', 'Doktor (S3)')], default='SD', max_length=3)),
                ('major_course', models.CharField(max_length=255)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education_records', to='hrd.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicantReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_type', models.CharField(choices=[('Employment', 'Employment'), ('Personal', 'Personal')], help_text='Type of reference: Employment or Personal', max_length=20)),
                ('name', models.CharField(help_text='Name of the reference', max_length=255)),
                ('position', models.CharField(help_text='Position of the reference', max_length=255)),
                ('company_name', models.CharField(help_text='Company name where the reference works', max_length=255)),
                ('company_address', models.TextField(help_text='Company address of the reference')),
                ('office_phone', models.CharField(blank=True, help_text='Office phone number', max_length=20, null=True)),
                ('residence_phone', models.CharField(blank=True, help_text='Residence phone number', max_length=20, null=True)),
                ('years_of_acquaintance', models.PositiveIntegerField(help_text='Number of years the applicant has known the reference')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='hrd.applicant')),
            ],
        ),
        migrations.AddField(
            model_name='applicant',
            name='position_applied_for',
            field=models.ForeignKey(help_text='Job the applicant applied for', on_delete=django.db.models.deletion.CASCADE, to='hrd.job'),
        ),
    ]
